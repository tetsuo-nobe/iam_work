AWSTemplateFormatVersion: '2010-09-09'
Description: 'Create Apache HTTP Server and MariaDB stack'

# パラメータセクション
Parameters:
  VPCCIDR: 
    AllowedPattern: '((\d{1,3})\.){3}\d{1,3}/\d{1,2}'
    Default: '10.0.0.0/16'
    Description: 'VPC CIDR Block (eg 10.0.0.0/16)'
    Type: String
  PUBLICSUBNET01CIDR: 
    AllowedPattern: '((\d{1,3})\.){3}\d{1,3}/\d{1,2}'
    Default: '10.0.0.0/24'
    Description: 'VPC CIDR Block (eg 10.0.0.0/24)'
    Type: String
#マッピングセクション
Mappings:
  RegionMap:
    'ap-northeast-1':
      AMI: 'ami-0dfa284c9d7b2adad'
    'ap-northeast-3':
      AMI: 'ami-0edc148c9a2c0cdcf'
# リソースセクション
Resources:
  # VPC とVPC 関連のリソース
  VPC:
    Type: 'AWS::EC2::VPC'
    Properties:
      CidrBlock: !Ref VPCCIDR
      EnableDnsHostnames: true
      Tags:
      - Key: Name
        Value: myshopVPC
  InternetGateway:
    Type: 'AWS::EC2::InternetGateway'
    Properties:
      Tags:
      - Key: Name
        Value: 'InternetGateway'
  VPCGatewayAttachment:
    Type: 'AWS::EC2::VPCGatewayAttachment'
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway
  PublicSubnet01:
    Type: 'AWS::EC2::Subnet'
    Properties:
      AvailabilityZone: !Select [0, !GetAZs '']
      CidrBlock: !Ref PUBLICSUBNET01CIDR
      VpcId: !Ref VPC
      MapPublicIpOnLaunch: true
      Tags:
      - Key: Name
        Value: 'PublicSubnet01'
  RouteTableForPublic:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: 'RouteTableForPublic'
  RouteTableAssociationPublic1:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref PublicSubnet01
      RouteTableId: !Ref RouteTableForPublic
  RoutePublicToInternet:
    Type: 'AWS::EC2::Route'
    Properties:
      RouteTableId: !Ref RouteTableForPublic
      DestinationCidrBlock: '0.0.0.0/0'
      GatewayId: !Ref InternetGateway
    DependsOn: VPCGatewayAttachment
  APSG:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupName : 'APSG'
      GroupDescription: 'Security Group for AP Server'
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: 'APSG'
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 192.168.10.1/32
  # EC2 インスタンス用 IAM ロール
  myInstanceRole:
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName: 'myInstanceRole'
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore
      Tags:
      - Key: Name
        Value: 'myInstanceRole'
  myInstanceRoleProfile:
    Type: 'AWS::IAM::InstanceProfile'
    Properties:
      Path: '/'
      Roles:
      - !Ref myInstanceRole
  # EC2 インスタンス
  myInstance: 
    Type: 'AWS::EC2::Instance'
    Properties: 
      ImageId: !FindInMap [RegionMap, !Ref 'AWS::Region', AMI]
      InstanceType: t2.micro
      SecurityGroupIds:
        - !GetAtt APSG.GroupId
      SubnetId: !Ref PublicSubnet01
      IamInstanceProfile:
        !Ref myInstanceRoleProfile
      Tags:
        - Key: Name
          Value: 'myInstance'
# アウトプットセクション
Outputs:
  # EC2 インスタンスの ID
  myInstanceId:
    Value: !Ref myInstance
